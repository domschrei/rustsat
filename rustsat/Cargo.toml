[package]
name = "rustsat"
version = "0.5.0"
edition.workspace = true
authors = ["Christoph Jabs <christoph.jabs@helsinki.fi>"]
license.workspace = true
description = "This library aims to provide implementations of elements commonly used in the development on software in the area of satisfiability solving. The focus of the library is to provide as much ease of use without giving up on performance."
keywords = ["sat", "satisfiability", "encodings"]
repository = "https://github.com/chrjabs/rustsat"
readme = "README.md"
rust-version = "1.66.1"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
anyhow.workspace = true
cpu-time.workspace = true
nom.workspace = true
thiserror.workspace = true
visibility.workspace = true
bzip2 = { workspace = true, optional = true }
flate2 = { workspace = true, optional = true }
rand = { workspace = true, optional = true }
rustc-hash = { workspace = true, optional = true }
xz2 = { workspace = true, optional = true }

[dev-dependencies]
rustsat-minisat = { path = "../minisat" }
rustsat-tools = { path = "../tools" }

[features]
default = ["optimization", "fxhash"]
internals = []
fxhash = ["dep:rustc-hash"]
optimization = []
multiopt = ["optimization"]
compression = ["dep:bzip2", "dep:flate2", "dep:xz2"]
rand = ["dep:rand"]
bench = []
ipasir-display = []
all = ["multiopt", "compression", "rand", "fxhash"]

[package.metadata.docs.rs]
features = ["all"]
rustdoc-args = ["--cfg", "docsrs"]

[[example]]
name = "profiling"

[[example]]
name = "print-lits"
